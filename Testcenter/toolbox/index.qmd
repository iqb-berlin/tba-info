---
lang: de
title: "Windows-Programm itc-ToolBox"
description: "Eine Sammlung von Funktionen zur Unterstützung der Arbeit mit dem Testcenter"
lightbox: true
format:
  html:
    toc: false
other-links:
  - text: Installieren
    href: https://www.iqb.hu-berlin.de/institut/ab/it/itc-ToolBox/
  - text: Veröffentlichung Quellcode
    href: https://github.com/iqb-berlin/itc-toolbox
---

[{{< fa download >}} Installieren](https://www.iqb.hu-berlin.de/institut/ab/it/itc-ToolBox/)

Das IQB-Testcenter ist in seiner Funktionalität auf die Durchführung von Leistungstests und Befragungen fokussiert. Wie in dieser Dokumentation beschrieben, müssen sehr spezifische Dateien hochgeladen werden, und die Ergebnisse einer Durchführung sind ebenfalls in einem spezifischen, für Menschen schlecht lesbaren Format gespeichert. Es gibt keine Editoren oder Browser, die die Inhalte oder Ergebnisse (Input/Output) auf freundliche Art präsentieren. Es müssen also andere Werkzeuge oder Webanwendungen genutzt werden, um effizient mit dem Testcenter zu arbeiten.

Dazu gehört das Windows-Programm itc-ToolBox. Es kann ohne Adminrechte über die Website des IQB (s. o.) installiert werden. Die Programmierung ist als Open Souce [hier](https://github.com/iqb-berlin/itc-toolbox) veröffentlicht und kann aufgrund der freien [Nutzungslizenz](https://iqb-berlin.github.io/license.html) angepasst werden (Visual Basic .NET).

::: {.callout-caution}
## Sicherheitsrisiko?

Derzeit ist die Software nicht vollständig digital signiert. Daher meldet Windows bei der Installation ein Sicherheitsrisiko und bei streng formulierten Sicherheitsrichtlinien scheitert die Installation. Das IQB arbeitet an einer Lösung.
:::

# Funktionen

## Input

![](assets/app-screen-1.jpg){group="gallery1"}

* Erstellen Booklet.Xml: Wenn man in einer übersichtlichen Excel-Tabelle die Zuordnung von Units zu Blöcken und Testheften definiert, kann man die Steuerdateien für die Aufgabenfolge (Booklet) auf einfache Art erstellen.
* Erzeugen einer Code-Liste: Testtaker-Dateien können so vielfältig sein, dass ein Tool nicht alles abdecken kann. Wichtig ist hierbei jedoch eine Liste von Codes, die einzigartig sind und den Standard-Regeln für Benutzernamen und Kennwort folgen.
* Erstellen Testtaker.Xml: Für Standardfälle kann man hier die Login-Dateien erzeugen.
* Erstellen von Handzetteln für Login: Damit die Testpersonen die Zugangsdaten erhalten, erzeugt die ToolBox Docx-Dateien. Hier können auch QR-Codes eingebunden werden.

## Output direkt

![](assets/app-screen-2.jpg){group="gallery1"}

* Berichte des System-Checks aufbereiten
* Gegebene Kommentare aus einem Review herunterladen und als Excel-Tabelle ausgeben
* Antworten und Logdaten vom Testcenter herunterladen und als JSON oder Excel-Tabelle speichern
* CSV-Daten des Testcenters - z. B. aus einer Offline-Durchführung - Laden und als Excel-Tabelle speichern

## DB: Antworten+Logs

![](assets/app-screen-3.jpg){group="gallery1"}

Für große Datenmengen kann man eine Datenbank benutzen. Es handelt sich um eine Datei, die man lokal speichert. Die ToolBox nutzt hierzu SQLite. Die Daten verbrauchen dann weniger Speicherplatz als JSON und man kann mit anderen Tools auf diese Daten zugreifen und flexibel auswerten. Unten ist als Beispiel der kostenlose DB Browser for SQLite abgebildet.

:::: {layout="[ 50, 50 ]"}

::: {#first-column}


![](assets/db4s-screen-1.jpg){group="gallery1"}

:::

::: {#second-column}

![](assets/db4s-screen-2.jpg){group="gallery1"}

:::

::::