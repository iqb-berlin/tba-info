---
lang: de
title: "Schritt für Schritt: Testcenter Daten Download"
---

::: {.callout-note}
In Bearbeitung THuste: to do

* Überarbeiten Layout und Text

:::

Es können Antwort- und Logdateien heruntergeladen werden. Diese werden im **Testcenter** in dem Arbeitsbereich gespeichert, in den auch die Testdateien für den Test geladen wurden.

![Testcenter Daten-Download](TC_Download.png)

> **Es werden nicht in jedem Testmodus Ergebnisse gespeichert. Die Speicherung erfolgt nur in folgenden Modi: `run-hot-return`, `run-hot-restart` und `run-trial`!**

Die Ergebnisse können mittels der üblichen Browserfunktionalitäten heruntergeladen werden. Die Dateien werden dann als CSV-Dateien gespeichert.

# Aufbereitung

Durch den modularen Aufbau des Testsystems ist die Komponente, die die Interaktion mit der Testperson steuert, austauschbar. Laut [Verona-Spezifikation](https://verona-interfaces.github.io/) ist das Datenformat der Antworten und Logs nicht vorgeschrieben. Das liegt z. B. daran, dass Antworten nicht nur einfache Datentypen sein können (Text, Zahl), sondern auch Listen, Bilder, Ton usw. Das Interesse an Zusatzinformationen (Zustände über die Zeit) mag auch schwanken je nachdem, ob eine Pilotierung (Kennenlernen von Itemeigenschaften) oder eine große automatisierte Testung durchgeführt wird.

Wenn man die Antwortdaten herunterlädt, sind die Antworten in einer bestimmten Spalte in einem Roh-Format JSON hinterlegt, so wie der Player sie geschickt hatte. Die Verona-Schnittstelle sieht vor, dass die Antwortdaten aufgeteilt werden können in mehrere sog. Parts oder Chunks. Im folgenden Beispiel hat der Player nur einen Chunk geschickt (mit der ID 'all') und die Antwortdaten als JSON-Struktur (verpackt als String). Außerdem ist das Datenformat und ein JavaScript-Zeitstempel (ts = TimeStamp) hinterlegt.

```json
[
    {
        "id":"all",
        "content":"{\"name\":\"Sam Sample\",\"age\":34}",
        "ts":1627545600,
        "responseType":"example-data-format"
    }
]
```

Für viele Anwendungsfälle mag das ausreichen: Einfache Umformungsfunktionen in Excel oder R liefern die Informationen in einem sinnvollen Format. Für komplexe Antwortformate müssen jedoch spezielle Programmierungen die Umformung vornehmen. Das IQB hat für seine beiden Antwortformate [`iqb-standard`](https://github.com/iqb-berlin/verona-data-specifications/blob/main/responses/manual_iqb-standard.md) und [`iqb-abi`](https://github.com/iqb-berlin/verona-player-abi/blob/master/docs/key-value.md) das Windows-Programm [itc-Toolbox](https://github.com/iqb-berlin/itc-toolbox#readme) veröffentlicht. Die Antwortdaten aller Player des IQB können hierüber in eine gut auswertbare Form gebracht werden.

> In der [Dokumentation des API des Testcenters](https://iqb-berlin.github.io/testcenter-backend/api/#tag/admin-download/paths/~1workspace~1{ws_id}~1report~1response/get) kann man nachlesen, dass über den Endpunkt, der die Antworten ausliefert, auch JSON als Format gewählt werden kann statt CSV. Das ist dann für die Datenintegration in Länderportale wahrscheinlich günstiger.