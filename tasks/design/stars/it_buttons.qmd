---
lang: de
title: "StarS: Interaktionstyp `BUTTONS`"
lightbox: true
---

Bei diesem Interationstyp werden Buttons gezeigt. Sie werden horizontal und vertikal zentriert.


:::: {layout-ncol=3}

![](assets/interaction-buttons.png){group="my-gallery"}

![](assets/interaction-buttons5.png){group="my-gallery"}

![](assets/interaction-buttons2.png){group="my-gallery"}

![](assets/interaction-buttons3.png){group="my-gallery"}

![](assets/interaction-buttons4.png){group="my-gallery"}

![](assets/interaction-buttons7.png){group="my-gallery"}

![](assets/interaction-syllabify.png){group="my-gallery"}

![](assets/interaction-syllabify2.png){group="my-gallery"}

![](assets/interaction-word-select.png){group="my-gallery"}

![](assets/interaction-phonetics.png){group="my-gallery"}

:::

# Stimulus

Zusätzlich oder alternativ zum Haupt-Audio kann Text oder ein Image übergeben werden.

* `imageSource`: Image als base64-kodierter String
* `imagePosition`: Man kann über die Konstanten `TOP` und `LEFT` (Standard) die Position des Images beeinflussen.
* `text`: Normaler String, wird ggf. nach Bedarf umgebrochen.

# Optionen/Buttons

## Parameter

Die Auswahloptionen werden in Form von Buttons der Testperson präsentiert. Folgende Parameter sind möglich:

```json
{
    "buttonType": "BIG_SQUARE", // <1>
    "numberOfRows": 2, // <2>
    "options": { // <3>
        "buttons": [
            {
                "text": "Ja"
            },
            {
                "text": "Nein"
            }
        ]
    }
}
```
1. `buttonType` legt Form, Größe und teilw. Position fest. Es sind Quadrate in verschiedenen Größen (`BIG_SQUARE`, `MEDIUM_SQUARE` Standard, `SMALL_SQUARE`), Text (`TEXT`) und `CIRCLE` als runder Button möglich.
2. `numberOfRows`: wenn > 1, erzwingt dieser Parameter mehrere Zeilen der Button-Darstellung. Der verfügbare Platz spielt dabei keine Rolle. Standardwert ist 1
3. `options` gibt es in zwei Varianten (s. u.)

## Optionen als `buttons`

In dieser Variante (s. Beispiel oben) muss jeder Button einzeln definiert werden. Es ist ein `text`, ein `imageSource` oder ein `icon` mit den möglichen Werten `CHECK_GREEN`, `CLOSE_RED` und `CLAP_HANDS` möglich.

## Optionen als `repeatButton`

Hier wird nur ein Button definiert, der dann aber vervielfältigt wird:

```json
{
    "options": {
        "repeatButton": {
            "option": {
                "icon": "CLAP_HANDS"
            },
            "numberOfOptions": 3
        }
    }
}
```

# Auswahl und Antwortwert

Die ausgewählte Antwort wird bei Bild und Symbol durch einen fetten blauen Rand visualisiert. Bei Text erfolgt eine Farbänderung im Hintergrund (blau) und bei der Schrift (weiß). Beispiele siehe oben.

```json
{
    "variableId": "MK02", // <1>
    "multiSelect": true // <2>
}
```
1. `variableId` setzt die Bezeichnung der Antwortvariablen auf einen bestimmten Wert. Standard hier ist `BUTTONS`.
2. `multiSelect`: Wenn `true`, dann ist das Markieren mehrerer Optionen möglich. Standardwert ist `false`, d. h. mit einer neuen Auswahl wird die vorherige Auswahl aufgehoben.

Die Antwortdaten folgen der [Standardstruktur](../../../coding/data-structures/response.qmd) des IQB. Als `id` wird die gewählte `variableId` bzw. der Standard `BUTTONS` gesetzt, und der Status wäre zunächst `VALUE_CHANGED` (zur Kodierung siehe [hier](responses.qmd)).

Für `value` muss unterschieden werden, ob `multiSelect` gesetzt wurde:

* `multiSelect` `true`: Der Antwortwert ist ein String. Jedes Zeichen ist `0` oder `1` und steht für einen Button, ob er gewählt wurde oder nicht.
* `multiSelect` `false`: Der Antwortwert ist eine Zahl mit der Position des gewählten Buttons. `1` steht für den ersten Button.